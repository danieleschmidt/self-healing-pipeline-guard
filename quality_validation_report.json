{
  "validation_time": "2025-08-27T21:01:56.008611",
  "project_root": "/root/repo",
  "total_score": 700.0,
  "max_score": 700,
  "categories": {
    "syntax": {
      "name": "Python Syntax",
      "score": 100,
      "max_score": 100,
      "details": [
        "\u2705 autonomous_quality_gates.py",
        "\u2705 core_research_validation.py",
        "\u2705 demo_robust.py",
        "\u2705 demo_scalable.py",
        "\u2705 demo_simple.py",
        "\u2705 enhanced_research_validation.py",
        "\u2705 final_autonomous_validation.py",
        "\u2705 final_comprehensive_validation.py",
        "\u2705 final_research_validation.py",
        "\u2705 final_validation.py",
        "\u2705 global_compliance_system.py",
        "\u2705 production_research_validation.py",
        "\u2705 quality_gates_runner.py",
        "\u2705 research_validation.py",
        "\u2705 research_validation_simplified.py",
        "\u2705 run_quality_gates.py",
        "\u2705 server.py",
        "\u2705 simple_scaling_validation.py",
        "\u2705 simple_validation.py",
        "\u2705 system_enhancement.py",
        "\u2705 test_generation2.py",
        "\u2705 test_generation3.py",
        "\u2705 test_scaling_validation.py",
        "\u2705 validation_simplified.py",
        "\u2705 quality_validation.py",
        "\u2705 .terragon/autonomous_executor.py",
        "\u2705 .terragon/value_discovery.py",
        "\u2705 healing_guard/__init__.py",
        "\u2705 healing_guard/cli.py",
        "\u2705 scripts/check_security_policies.py",
        "\u2705 scripts/generate_sbom.py",
        "\u2705 scripts/update_version.py",
        "\u2705 scripts/validate_config.py",
        "\u2705 tests/conftest.py",
        "\u2705 healing_guard/api/__init__.py",
        "\u2705 healing_guard/api/enhanced_api.py",
        "\u2705 healing_guard/api/exceptions.py",
        "\u2705 healing_guard/api/main.py",
        "\u2705 healing_guard/api/middleware.py",
        "\u2705 healing_guard/api/routes.py",
        "\u2705 healing_guard/api/realtime_dashboard.py",
        "\u2705 healing_guard/compliance/__init__.py",
        "\u2705 healing_guard/compliance/gdpr.py",
        "\u2705 healing_guard/compliance/advanced_audit.py",
        "\u2705 healing_guard/core/__init__.py",
        "\u2705 healing_guard/core/advanced_scaling.py",
        "\u2705 healing_guard/core/cache.py",
        "\u2705 healing_guard/core/config.py",
        "\u2705 healing_guard/core/exceptions.py",
        "\u2705 healing_guard/core/failure_detector.py",
        "\u2705 healing_guard/core/healing_engine.py",
        "\u2705 healing_guard/core/optimization.py",
        "\u2705 healing_guard/core/quantum_planner.py",
        "\u2705 healing_guard/core/resilience.py",
        "\u2705 healing_guard/core/scaling.py",
        "\u2705 healing_guard/core/validation.py",
        "\u2705 healing_guard/i18n/__init__.py",
        "\u2705 healing_guard/i18n/translator.py",
        "\u2705 healing_guard/models/__init__.py",
        "\u2705 healing_guard/models/healing.py",
        "\u2705 healing_guard/models/pipeline.py",
        "\u2705 healing_guard/monitoring/__init__.py",
        "\u2705 healing_guard/monitoring/enhanced_monitoring.py",
        "\u2705 healing_guard/monitoring/health.py",
        "\u2705 healing_guard/monitoring/metrics.py",
        "\u2705 healing_guard/monitoring/observability.py",
        "\u2705 healing_guard/performance/__init__.py",
        "\u2705 healing_guard/performance/benchmarks.py",
        "\u2705 healing_guard/security/__init__.py",
        "\u2705 healing_guard/security/advanced_security.py",
        "\u2705 healing_guard/security/advanced_validator.py",
        "\u2705 healing_guard/security/scanner.py",
        "\u2705 healing_guard/security/validator.py",
        "\u2705 healing_guard/security/enterprise_security.py",
        "\u2705 healing_guard/ml/__init__.py",
        "\u2705 healing_guard/ml/failure_pattern_recognition.py",
        "\u2705 healing_guard/tenancy/multi_tenant.py",
        "\u2705 healing_guard/tenancy/__init__.py",
        "\u2705 healing_guard/distributed/cluster_coordination.py",
        "\u2705 healing_guard/distributed/__init__.py",
        "\u2705 healing_guard/ai/predictive_prevention.py",
        "\u2705 healing_guard/ai/__init__.py",
        "\u2705 tests/e2e/test_healing_workflow.py",
        "\u2705 tests/fixtures/__init__.py",
        "\u2705 tests/fixtures/pipeline_data.py",
        "\u2705 tests/integration/test_api_integration.py",
        "\u2705 tests/integration/test_basic_functionality.py",
        "\u2705 tests/integration/test_enhanced_system.py",
        "\u2705 tests/integration/test_webhook_processing.py",
        "\u2705 tests/performance/locustfile.py",
        "\u2705 tests/performance/pytest_benchmarks.py",
        "\u2705 tests/performance/test_load_performance.py",
        "\u2705 tests/unit/test_cli.py",
        "\u2705 tests/unit/test_failure_detector.py",
        "\u2705 tests/unit/test_failure_detector_enhanced.py",
        "\u2705 tests/unit/test_healing_engine.py",
        "\u2705 tests/unit/test_hybrid_quantum_optimization.py",
        "\u2705 tests/unit/test_models.py",
        "\u2705 tests/unit/test_quantum_planner.py",
        "\u2705 tests/utils/__init__.py",
        "\u2705 tests/utils/assertions.py",
        "\u2705 tests/utils/test_helpers.py"
      ]
    },
    "structure": {
      "name": "Project Structure",
      "score": 100,
      "max_score": 100,
      "details": [
        "\u2705 healing_guard/__init__.py",
        "\u2705 healing_guard/core/",
        "\u2705 healing_guard/api/",
        "\u2705 healing_guard/ml/",
        "\u2705 healing_guard/security/",
        "\u2705 healing_guard/compliance/",
        "\u2705 healing_guard/tenancy/",
        "\u2705 healing_guard/distributed/",
        "\u2705 healing_guard/ai/",
        "\u2705 healing_guard/monitoring/"
      ]
    },
    "generation1": {
      "name": "Generation 1 - Simple",
      "score": 100,
      "max_score": 100,
      "details": [
        "\u2705 Enhanced monitoring system",
        "\u2705 Real-time dashboard API",
        "\u2705 ML failure pattern recognition",
        "\u2705 Enhanced healing engine"
      ]
    },
    "generation2": {
      "name": "Generation 2 - Robust",
      "score": 100,
      "max_score": 100,
      "details": [
        "\u2705 Enterprise security system",
        "\u2705 Advanced compliance auditing",
        "\u2705 Multi-tenant isolation",
        "\u2705 Comprehensive robustness features"
      ]
    },
    "generation3": {
      "name": "Generation 3 - Scale",
      "score": 100,
      "max_score": 100,
      "details": [
        "\u2705 Distributed cluster coordination",
        "\u2705 AI predictive prevention",
        "\u2705 Performance optimization features",
        "\u2705 Advanced monitoring and metrics"
      ]
    },
    "integration": {
      "name": "Integration",
      "score": 100.0,
      "max_score": 100,
      "details": [
        "\u2705 healing_guard/__init__.py",
        "\u2705 healing_guard/api/__init__.py",
        "\u2705 healing_guard/compliance/__init__.py",
        "\u2705 healing_guard/core/__init__.py",
        "\u2705 healing_guard/i18n/__init__.py",
        "\u2705 healing_guard/models/__init__.py",
        "\u2705 healing_guard/monitoring/__init__.py",
        "\u2705 healing_guard/performance/__init__.py",
        "\u2705 healing_guard/security/__init__.py",
        "\u2705 healing_guard/ml/__init__.py",
        "\u2705 healing_guard/tenancy/__init__.py",
        "\u2705 healing_guard/distributed/__init__.py",
        "\u2705 healing_guard/ai/__init__.py",
        "\u2705 pyproject.toml",
        "\u2705 docker-compose.yml",
        "\u2705 Dockerfile"
      ]
    },
    "documentation": {
      "name": "Documentation",
      "score": 100,
      "max_score": 100,
      "details": [
        "\u2705 README.md",
        "\u2705 ARCHITECTURE.md",
        "\u2705 CHANGELOG.md",
        "\u2705 docs/",
        "\u2705 pyproject.toml",
        "\u2705 LICENSE"
      ]
    }
  },
  "percentage": 100.0
}