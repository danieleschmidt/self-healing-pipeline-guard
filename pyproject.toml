[tool.poetry]
name = "self-healing-pipeline-guard"
version = "1.0.0"
description = "AI-powered CI/CD guardian that automatically detects, diagnoses, and fixes pipeline failures"
authors = ["Terragon Labs <info@terragonlabs.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/terragon-labs/self-healing-pipeline-guard"
repository = "https://github.com/terragon-labs/self-healing-pipeline-guard"
documentation = "https://docs.terragonlabs.com/healing-guard"
keywords = ["ci-cd", "devops", "automation", "ml", "pipeline", "healing", "reliability"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Build Tools",
    "Topic :: System :: Monitoring",
]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.109.0"
uvicorn = {extras = ["standard"], version = "^0.27.0"}
gunicorn = "^21.2.0"
pydantic = "^2.5.3"
pydantic-settings = "^2.1.0"
httpx = "^0.26.0"
redis = "^5.0.1"
asyncpg = "^0.29.0"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.25"}
alembic = "^1.13.1"
celery = "^5.3.4"
numpy = "^1.26.3"
pandas = "^2.2.0"
scikit-learn = "^1.4.0"
scipy = "^1.12.0"
matplotlib = "^3.8.2"
plotly = "^5.18.0"
python-multipart = "^0.0.6"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
bcrypt = "^4.1.2"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
prometheus-client = "^0.19.0"
opentelemetry-api = "^1.22.0"
opentelemetry-sdk = "^1.22.0"
opentelemetry-exporter-jaeger = "^1.21.0"
structlog = "^23.2.0"
typer = "^0.9.0"
rich = "^13.7.0"
click = "^8.1.7"
pyyaml = "^6.0.1"
toml = "^0.10.2"
jinja2 = "^3.1.3"
aiofiles = "^23.2.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
pytest-asyncio = "^0.23.2"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
pytest-benchmark = "^4.0.0"
pytest-xdist = "^3.5.0"
black = "^23.12.1"
isort = "^5.13.2"
flake8 = "^7.0.0"
mypy = "^1.8.0"
bandit = "^1.7.5"
safety = "^2.3.5"
pre-commit = "^3.6.0"
coverage = "^7.4.0"
locust = "^2.20.0"
httpx = "^0.26.0"

[tool.poetry.group.test.dependencies]
factory-boy = "^3.3.0"
freezegun = "^1.4.0"
respx = "^0.20.2"
pytest-sugar = "^0.9.7"
pytest-clarity = "^1.0.1"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.3"
mkdocs-material = "^9.5.3"
mkdocs-mermaid2-plugin = "^1.1.1"
mike = "^2.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
    "performance: marks tests as performance tests",
]

[tool.coverage.run]
source = ["healing_guard"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["healing_guard"]
skip_glob = ["*/migrations/*"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "celery.*",
    "redis.*",
    "prometheus_client.*",
    "locust.*",
]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", "venv"]
skips = ["B101", "B601"]

[tool.poetry.scripts]
healing-guard = "healing_guard.cli:main"