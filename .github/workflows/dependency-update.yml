name: Dependency Updates

on:
  schedule:
    - cron: '0 4 * * 1'  # Weekly on Monday at 4 AM
  workflow_dispatch:

jobs:
  update-python-deps:
    name: Update Python Dependencies
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.DEPENDENCY_UPDATE_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Update dependencies
        run: |
          poetry update
          poetry export -f requirements.txt --output requirements.txt --with dev,test,docs

      - name: Run tests with updated dependencies
        run: |
          poetry install --with dev,test
          poetry run pytest tests/unit/ -x

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.DEPENDENCY_UPDATE_TOKEN }}
          commit-message: 'chore: update Python dependencies'
          title: 'chore: Weekly Python dependency updates'
          body: |
            ## Automated Dependency Updates
            
            This PR contains automated updates to Python dependencies.
            
            ### Changes
            - Updated all Poetry dependencies to latest compatible versions
            - Regenerated requirements.txt
            
            ### Testing
            - [x] Unit tests pass with updated dependencies
            - [ ] Integration tests (will run in PR)
            - [ ] Manual testing required for breaking changes
            
            ### Security
            All dependency updates have been scanned for known vulnerabilities.
            
            Auto-generated by dependency-update workflow.
          branch: dependency-updates/python
          delete-branch: true
          labels: |
            dependencies
            automated
            python

  update-node-deps:
    name: Update Node.js Dependencies
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.DEPENDENCY_UPDATE_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Update dependencies
        run: |
          npm update
          npm audit fix --audit-level moderate

      - name: Run tests
        run: |
          npm run test:links
          npm run lint:docs

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.DEPENDENCY_UPDATE_TOKEN }}
          commit-message: 'chore: update Node.js dependencies'
          title: 'chore: Weekly Node.js dependency updates'
          body: |
            ## Automated Dependency Updates
            
            This PR contains automated updates to Node.js dependencies.
            
            ### Changes
            - Updated all npm dependencies to latest compatible versions
            - Applied security fixes via npm audit
            
            ### Testing
            - [x] Documentation tests pass
            - [x] Linting passes with updated dependencies
            
            ### Security
            All dependency updates have been scanned for known vulnerabilities.
            
            Auto-generated by dependency-update workflow.
          branch: dependency-updates/nodejs
          delete-branch: true
          labels: |
            dependencies
            automated
            nodejs

  security-updates:
    name: Priority Security Updates
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.DEPENDENCY_UPDATE_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Check for security updates
        id: security-check
        run: |
          poetry install --with dev
          
          # Check for security vulnerabilities
          if poetry run safety check --json --output security-check.json; then
            echo "security_updates_needed=false" >> $GITHUB_OUTPUT
          else
            echo "security_updates_needed=true" >> $GITHUB_OUTPUT
          fi

      - name: Apply security updates
        if: steps.security-check.outputs.security_updates_needed == 'true'
        run: |
          # Get list of vulnerable packages
          VULNERABLE_PACKAGES=$(poetry run safety check --json | jq -r '.[].package_name' | sort -u)
          
          # Update each vulnerable package
          for package in $VULNERABLE_PACKAGES; do
            poetry update "$package"
          done

      - name: Verify security fixes
        if: steps.security-check.outputs.security_updates_needed == 'true'
        run: |
          poetry run safety check --exit-code

      - name: Run critical tests
        if: steps.security-check.outputs.security_updates_needed == 'true'
        run: |
          poetry run pytest tests/unit/ tests/integration/ -x

      - name: Create Security Update PR
        if: steps.security-check.outputs.security_updates_needed == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.DEPENDENCY_UPDATE_TOKEN }}
          commit-message: 'security: update vulnerable dependencies'
          title: 'ðŸ”’ Security: Update vulnerable dependencies'
          body: |
            ## ðŸš¨ Security Dependency Updates
            
            This PR contains **critical security updates** for vulnerable dependencies.
            
            ### Vulnerabilities Fixed
            See attached security-check.json for details of vulnerabilities addressed.
            
            ### Testing
            - [x] Critical test suite passes
            - [x] Security scan passes after updates
            
            ### Priority
            **HIGH PRIORITY** - Please review and merge as soon as possible.
            
            Auto-generated by security-update workflow.
          branch: security-updates/critical
          delete-branch: true
          labels: |
            security
            critical
            dependencies
            automated

      - name: Upload security report
        if: steps.security-check.outputs.security_updates_needed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: security-check-report
          path: security-check.json

  dependabot-auto-merge:
    name: Auto-merge Dependabot PRs
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    
    steps:
      - name: Fetch PR details
        id: pr
        run: |
          PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          echo "number=$PR_NUMBER" >> $GITHUB_OUTPUT

      - name: Check if PR is minor/patch update
        id: check-update
        run: |
          # Get PR title and check if it's a minor or patch update
          PR_TITLE=$(gh pr view ${{ steps.pr.outputs.number }} --json title --jq '.title')
          
          if echo "$PR_TITLE" | grep -E "(bump|update).*from.*to.*\.(0\.|[0-9]+\.[0-9]+\.[0-9]+)"; then
            echo "auto_merge=true" >> $GITHUB_OUTPUT
          else
            echo "auto_merge=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-approve and merge
        if: steps.check-update.outputs.auto_merge == 'true'
        run: |
          gh pr review ${{ steps.pr.outputs.number }} --approve
          gh pr merge ${{ steps.pr.outputs.number }} --auto --squash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}