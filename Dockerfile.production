# Multi-stage production Dockerfile for Healing Guard
FROM python:3.12-slim as base

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Create app user
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Set work directory
WORKDIR /app

# Install Python dependencies
COPY pyproject.toml poetry.lock* ./
RUN pip install poetry && \
    poetry config virtualenvs.create false && \
    poetry install --no-dev --no-interaction --no-ansi

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p /app/logs /app/data /app/security && \
    chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Main API service
FROM base as api
EXPOSE 8000
CMD ["uvicorn", "healing_guard.api.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4"]

# Dashboard service
FROM base as dashboard  
EXPOSE 8001
CMD ["python", "-m", "healing_guard.api.realtime_dashboard"]

# CLI tools
FROM base as cli
ENTRYPOINT ["python", "-m", "healing_guard.cli"]

# Production image (default)
FROM api as production