# Self-Healing Pipeline Guard Environment Configuration
# Copy this file to .env and update with your specific values

# Application Settings
APP_NAME=self-healing-pipeline-guard
APP_VERSION=1.0.0
APP_ENV=development
DEBUG=true
LOG_LEVEL=INFO

# Server Configuration
HOST=0.0.0.0
PORT=8000
WORKERS=4
RELOAD=true

# Database Configuration
DATABASE_URL=postgresql://healing_guard:password@localhost:5432/healing_guard_db
DATABASE_POOL_SIZE=10
DATABASE_POOL_OVERFLOW=20
DATABASE_ECHO=false

# Redis Configuration
REDIS_URL=redis://localhost:6379/0
REDIS_MAX_CONNECTIONS=10
REDIS_ENCODING=utf-8

# Celery Configuration
CELERY_BROKER_URL=redis://localhost:6379/1
CELERY_RESULT_BACKEND=redis://localhost:6379/2
CELERY_TASK_SERIALIZER=json
CELERY_RESULT_SERIALIZER=json
CELERY_ACCEPT_CONTENT=["json"]
CELERY_TIMEZONE=UTC

# Security Settings
SECRET_KEY=your-super-secret-key-change-in-production
JWT_SECRET_KEY=your-jwt-secret-key
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7

# Authentication
OAUTH_CLIENT_ID=your-oauth-client-id
OAUTH_CLIENT_SECRET=your-oauth-client-secret
OAUTH_REDIRECT_URI=http://localhost:8000/auth/callback

# GitHub Integration
GITHUB_APP_ID=your-github-app-id
GITHUB_PRIVATE_KEY_PATH=/path/to/private-key.pem
GITHUB_WEBHOOK_SECRET=your-webhook-secret
GITHUB_TOKEN=ghp_your-personal-access-token

# GitLab Integration
GITLAB_URL=https://gitlab.com
GITLAB_TOKEN=glpat-your-gitlab-token
GITLAB_WEBHOOK_SECRET=your-gitlab-webhook-secret

# Jenkins Integration
JENKINS_URL=http://localhost:8080
JENKINS_USERNAME=admin
JENKINS_API_TOKEN=your-jenkins-api-token

# CircleCI Integration
CIRCLECI_API_TOKEN=your-circleci-token

# Azure DevOps Integration
AZURE_DEVOPS_ORG=your-organization
AZURE_DEVOPS_TOKEN=your-azure-devops-token

# Notification Integrations
SLACK_BOT_TOKEN=xoxb-your-slack-bot-token
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/your/webhook/url
DISCORD_BOT_TOKEN=your-discord-bot-token
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/your/webhook

# Email Configuration
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password
SMTP_TLS=true
EMAIL_FROM=noreply@terragonlabs.com

# PagerDuty Integration
PAGERDUTY_INTEGRATION_KEY=your-pagerduty-integration-key
PAGERDUTY_API_TOKEN=your-pagerduty-api-token

# Ticketing Integration
JIRA_URL=https://your-domain.atlassian.net
JIRA_USERNAME=your-jira-email
JIRA_API_TOKEN=your-jira-api-token
JIRA_PROJECT_KEY=HEAL

SERVICENOW_INSTANCE=your-instance.service-now.com
SERVICENOW_USERNAME=your-servicenow-username
SERVICENOW_PASSWORD=your-servicenow-password

# Cloud Provider Configuration
# AWS
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_REGION=us-west-2
AWS_S3_BUCKET=healing-guard-artifacts

# Google Cloud
GOOGLE_CLOUD_PROJECT=your-gcp-project-id
GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account.json
GCP_STORAGE_BUCKET=healing-guard-artifacts

# Azure
AZURE_STORAGE_ACCOUNT=yourstorageaccount
AZURE_STORAGE_KEY=your-storage-key
AZURE_CONTAINER_NAME=healing-guard-artifacts

# Monitoring and Observability
PROMETHEUS_URL=http://localhost:9090
GRAFANA_URL=http://localhost:3000
GRAFANA_API_KEY=your-grafana-api-key

# OpenTelemetry Configuration
OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317
OTEL_SERVICE_NAME=healing-guard
OTEL_RESOURCE_ATTRIBUTES=service.version=1.0.0

# Machine Learning Configuration
ML_MODEL_PATH=/app/models
ML_TRAINING_DATA_PATH=/app/data/training
ML_BATCH_SIZE=32
ML_LEARNING_RATE=0.001
ML_EPOCHS=100

# Feature Flags
ENABLE_AUTO_HEALING=true
ENABLE_LEARNING_MODE=true
ENABLE_NOTIFICATIONS=true
ENABLE_METRICS_COLLECTION=true
ENABLE_SECURITY_SCANNING=true

# Rate Limiting
RATE_LIMIT_REQUESTS_PER_MINUTE=60
RATE_LIMIT_BURST=10

# Timeout Configuration
HTTP_TIMEOUT=30
WEBHOOK_TIMEOUT=15
HEALING_TIMEOUT=300
API_TIMEOUT=60

# Performance Settings
MAX_CONCURRENT_HEALINGS=10
MAX_RETRY_ATTEMPTS=3
RETRY_BACKOFF_FACTOR=2
QUEUE_MAX_SIZE=1000

# Development Settings (Development only)
DEV_AUTO_RELOAD=true
DEV_PROFILING=false
DEV_MOCK_EXTERNAL_APIS=false
DEV_SKIP_AUTH=false

# Testing Configuration (Testing only)
TEST_DATABASE_URL=postgresql://healing_guard_test:password@localhost:5432/healing_guard_test_db
TEST_REDIS_URL=redis://localhost:6379/15
TEST_SKIP_EXTERNAL_CALLS=true

# Production Settings (Production only)
PRODUCTION_MODE=false
SSL_CERT_PATH=/path/to/cert.pem
SSL_KEY_PATH=/path/to/key.pem
CORS_ALLOWED_ORIGINS=["https://your-domain.com"]
TRUSTED_PROXIES=["10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16"]

# Backup Configuration
BACKUP_ENABLED=true
BACKUP_SCHEDULE="0 2 * * *"  # Daily at 2 AM
BACKUP_RETENTION_DAYS=30
BACKUP_STORAGE_PATH=/backups

# Health Check Configuration
HEALTH_CHECK_TIMEOUT=5
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_ENDPOINTS=["database", "redis", "external_apis"]

# Metrics and Analytics
METRICS_RETENTION_DAYS=90
ANALYTICS_ENABLED=true
USAGE_TRACKING=true

# Cost Management
COST_TRACKING_ENABLED=true
BUDGET_ALERT_THRESHOLD=1000
COST_ALLOCATION_TAGS=["team", "project", "environment"]