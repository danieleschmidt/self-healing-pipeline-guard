apiVersion: v1
kind: ConfigMap
metadata:
  name: healing-guard-config
  namespace: healing-guard
  labels:
    app.kubernetes.io/name: healing-guard
    app.kubernetes.io/component: config
data:
  ENVIRONMENT: "production"
  LOG_LEVEL: "INFO"
  REDIS_URL: "redis://healing-guard-redis:6379/0"
  OTEL_EXPORTER_OTLP_ENDPOINT: "http://healing-guard-otel:4317"
  PROMETHEUS_URL: "http://healing-guard-prometheus:9090"
  
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: healing-guard-nginx-config
  namespace: healing-guard
  labels:
    app.kubernetes.io/name: healing-guard
    app.kubernetes.io/component: nginx
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        upstream api_backend {
            least_conn;
            server healing-guard-api:8000 max_fails=3 fail_timeout=30s;
        }
        
        upstream dashboard_backend {
            server healing-guard-dashboard:8001 max_fails=3 fail_timeout=30s;
        }
        
        server {
            listen 80;
            server_name _;
            
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            
            location /api/ {
                proxy_pass http://api_backend/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                
                # Timeout settings
                proxy_connect_timeout 30s;
                proxy_send_timeout 30s;
                proxy_read_timeout 30s;
            }
            
            location /dashboard/ {
                proxy_pass http://dashboard_backend/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                
                # WebSocket support
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
            }
            
            location / {
                return 301 /dashboard/;
            }
        }
    }